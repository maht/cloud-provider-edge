---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edge-cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:edge-cloud-controller-manager:core
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager:core
subjects:
- kind: ServiceAccount
  name: edge-cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:edge-cloud-controller-manager:service-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager:service-controller
subjects:
- kind: ServiceAccount
  name: edge-cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: edge-cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: edge-cloud-controller-manager
  template:
    metadata:
      labels:
        app: edge-cloud-controller-manager
    spec:
      serviceAccountName: edge-cloud-controller-manager
      containers:
      - name: edge-cloud-controller-manager
        image: midokura/edge-cloud-controller-manager:amd64-linux-latest
      hostNetwork: true
      tolerations:
      # this is required so CCM can bootstrap itself
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      # this is to have the daemonset runnable on master nodes
      # the taint may vary depending on your cluster setup
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      # this is to restrict CCM to only run on master nodes
      # the node selector may vary depending on your cluster setup
      nodeSelector:
        node-role.kubernetes.io/master: ""
